<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mcqueen.mcqueen.mapper.RoleAuthMapper">
  <resultMap id="BaseResultMap" type="com.mcqueen.mcqueen.model.RoleAuth">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="INTEGER" property="ID" />
    <result column="RoleID" jdbcType="INTEGER" property="roleID" />
    <result column="AuthID" jdbcType="INTEGER" property="authID" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="LastModifyTime" jdbcType="TIMESTAMP" property="lastModifyTime" />
    <result column="IsDelete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, RoleID, AuthID, CreateTime, LastModifyTime, IsDelete
  </sql>
  <select id="selectByExample" parameterType="com.mcqueen.mcqueen.model.RoleAuthExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from "M_Role_Auth"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from "M_Role_Auth"
    where ID = #{ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from "M_Role_Auth"
    where ID = #{ID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mcqueen.mcqueen.model.RoleAuthExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from "M_Role_Auth"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcqueen.mcqueen.model.RoleAuth">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into "M_Role_Auth" (ID, RoleID, AuthID, 
      CreateTime, LastModifyTime, IsDelete
      )
    values (#{ID,jdbcType=INTEGER}, #{roleID,jdbcType=INTEGER}, #{authID,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mcqueen.mcqueen.model.RoleAuth">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into "M_Role_Auth"
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ID != null">
        ID,
      </if>
      <if test="roleID != null">
        RoleID,
      </if>
      <if test="authID != null">
        AuthID,
      </if>
      <if test="createTime != null">
        CreateTime,
      </if>
      <if test="lastModifyTime != null">
        LastModifyTime,
      </if>
      <if test="isDelete != null">
        IsDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ID != null">
        #{ID,jdbcType=INTEGER},
      </if>
      <if test="roleID != null">
        #{roleID,jdbcType=INTEGER},
      </if>
      <if test="authID != null">
        #{authID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcqueen.mcqueen.model.RoleAuthExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from "M_Role_Auth"
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update "M_Role_Auth"
    <set>
      <if test="record.ID != null">
        ID = #{record.ID,jdbcType=INTEGER},
      </if>
      <if test="record.roleID != null">
        RoleID = #{record.roleID,jdbcType=INTEGER},
      </if>
      <if test="record.authID != null">
        AuthID = #{record.authID,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        IsDelete = #{record.isDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update "M_Role_Auth"
    set ID = #{record.ID,jdbcType=INTEGER},
      RoleID = #{record.roleID,jdbcType=INTEGER},
      AuthID = #{record.authID,jdbcType=INTEGER},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      IsDelete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcqueen.mcqueen.model.RoleAuth">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update "M_Role_Auth"
    <set>
      <if test="roleID != null">
        RoleID = #{roleID,jdbcType=INTEGER},
      </if>
      <if test="authID != null">
        AuthID = #{authID,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        LastModifyTime = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        IsDelete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where ID = #{ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcqueen.mcqueen.model.RoleAuth">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update "M_Role_Auth"
    set RoleID = #{roleID,jdbcType=INTEGER},
      AuthID = #{authID,jdbcType=INTEGER},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      LastModifyTime = #{lastModifyTime,jdbcType=TIMESTAMP},
      IsDelete = #{isDelete,jdbcType=BIT}
    where ID = #{ID,jdbcType=INTEGER}
  </update>

  <insert id="roleConfigAuth">
    INSERT INTO M_Role_Auth
    (RoleID, AuthID,
    CreateTime, LastModifyTime, IsDelete
    )
    values
    <foreach collection ="roleAuths" item="roleAuth" separator =",">
      (#{roleAuth.roleID,jdbcType=INTEGER}, #{roleAuth.authID,jdbcType=INTEGER},
      #{roleAuth.createTime,jdbcType=TIMESTAMP}, #{roleAuth.lastModifyTime,jdbcType=TIMESTAMP}, #{roleAuth.isDelete,jdbcType=BIT}
      )
    </foreach >

  </insert>

  <update id="delAllAuthByRoleID">
    update M_Role_Auth set IsDelete = 1 where RoleID = #{roleID};
  </update>
</mapper>